/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Game;

import Config.Koneksi;
import img.Tes;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.sql.SQLException;
import java.sql.Connection;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.sql.ResultSet;

/**
 *
 * @author surya
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    DefaultTableModel tbl_gambar;

    String path2 = null;
    private Image img;

    public Admin() {
        initComponents();
        this.TampilData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Group = new javax.swing.ButtonGroup();
        Panel = new javax.swing.JPanel();
        lbl_photo = new javax.swing.JLabel();
        btnUpload = new javax.swing.JButton();
        tx_id = new javax.swing.JTextField();
        tx_jawaban = new javax.swing.JTextField();
        Easy = new javax.swing.JRadioButton();
        Normal = new javax.swing.JRadioButton();
        Hard = new javax.swing.JRadioButton();
        btnAdd = new javax.swing.JButton();
        updte = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lbl_photo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        btnUpload.setBackground(new java.awt.Color(102, 102, 255));
        btnUpload.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpload.setForeground(new java.awt.Color(255, 255, 255));
        btnUpload.setText("UPLOAD");
        btnUpload.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        tx_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_idActionPerformed(evt);
            }
        });

        Group.add(Easy);
        Easy.setText("Easy");

        Group.add(Normal);
        Normal.setText("Normal");

        Group.add(Hard);
        Hard.setText("Hard");

        btnAdd.setBackground(new java.awt.Color(51, 255, 0));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        updte.setBackground(new java.awt.Color(102, 102, 255));
        updte.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updte.setForeground(new java.awt.Color(255, 255, 255));
        updte.setText("EDIT");
        updte.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updteActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 51, 51));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Gambar", "Jawaban", "Level"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CLOSE");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText(" Jawaban :");

        jLabel2.setText("Id gambar :");

        jLabel3.setText("Level :");

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(lbl_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(tx_id, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tx_jawaban, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(Easy, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Normal, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Hard, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(updte, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(tx_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(tx_jawaban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Easy)
                            .addComponent(Normal)
                            .addComponent(Hard))))
                .addGap(18, 18, 18)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpload)
                    .addComponent(btnAdd)
                    .addComponent(updte)
                    .addComponent(delete)
                    .addComponent(jButton1))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:

        JFileChooser choose = new JFileChooser();
        // Pass null untuk memusatkan dialog di tengah layar
        int result = choose.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            // Pengguna memilih file
            File f = choose.getSelectedFile();
            String path = f.getAbsolutePath();

            try {
                //mengambil data gambar yang dimasukan dan menyesuaikan ukuran jlabel
                BufferedImage bi = ImageIO.read(new File(path));
                img = bi.getScaledInstance(350, 350, Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                lbl_photo.setIcon(icon);
                path2 = path;
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            // Pengguna membatalkan pemilih file atau menutup dialog
            System.out.println("Tidak ada file yang dipilih");
        }

    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        try {
            //memasukan data kedalam tabel data base
            String sql = "insert into tb_gambar(gambar, jawaban_gambar, level_gambar) values('',?,?)";
            java.sql.Connection conn = Koneksi.getKoneksi();

            //statemen 1
            PreparedStatement stmt = conn.prepareStatement(sql);

            //path dan copy gambar
            String path = "";
            path = "src/imgdtbase/";
//            System.out.println(path);

            //memasukan data id dan kesulitan setelahnya menjalankan statement 1
            stmt.setString(1, tx_jawaban.getText());
            if (Easy.isSelected()) {
                stmt.setString(2, "Easy");
            } else if (Normal.isSelected()) {
                stmt.setString(2, "Normal");
            } else {
                stmt.setString(2, "Hard");
            }
            stmt.executeUpdate();

            try {
                //statement 2
                java.sql.Statement stmt2 = conn.createStatement();

                //memilih semua data id dari tabel gambar dan menjalankan statement 2
                String SQL = "SELECT MAX(id_gambar) as id FROM tb_gambar";
                java.sql.ResultSet res = stmt2.executeQuery(SQL);

                //mengambil id 
                res.next();
                String id = res.getString("id");

                try {
                    //mengupdate data gambar sesuai dengan statement 2 dan menjalankan statement 3
                    String update = "UPDATE tb_gambar SET gambar=? WHERE id_gambar = ?";
                    PreparedStatement stmt3 = conn.prepareStatement(update);

                    //mengubah nama file dari gambar
                    stmt3.setString(1, id + ".jpg");
                    stmt3.setString(2, id);

                    stmt3.executeUpdate();
                    try {
                        //set gambar pada jlabel
                        Icon icon = lbl_photo.getIcon();
                        BufferedImage bi = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
                        Graphics2D g2 = bi.createGraphics();
                        g2.drawImage(img, 0, 0, null);
                        g2.dispose();
                        ImageIO.write(bi, "jpg", new File(path + id + ".jpg"));
                    } catch (IOException e) {
                        e.printStackTrace();
                    }

                } catch (Exception e) {
                    e.printStackTrace();

                }

            } catch (Exception e) {
                e.printStackTrace();

            }

            //clear data setelah masukan
            tx_id.setText("");
            lbl_photo.setIcon(null);
            tx_jawaban.setText("");
            Group.clearSelection();

            //menampilkan data dalam table data 
            TampilData();

            //alert data tersimpan
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_btnAddActionPerformed


    private void tx_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_idActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_tx_idActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:

        //selected data pada tabel jika di klik
        int baris = Table.getSelectedRow();

        //mengambil id
        tx_id.setText(tbl_gambar.getValueAt(baris, 0).toString());

        //mengambil data gambar
        lbl_photo.setIcon((Icon) tbl_gambar.getValueAt(baris, 1));

        //mengambil jawaban
        tx_jawaban.setText(tbl_gambar.getValueAt(baris, 2).toString());

        //mengambil level
        if (tbl_gambar.getValueAt(baris, 3).toString().equals("Easy")) {
            Easy.setSelected(true);
        } else if (tbl_gambar.getValueAt(baris, 3).toString().equals("Normal")) {
            Normal.setSelected(true);
        } else {
            Hard.setSelected(true);
        }

        //set button aktif dan tidak
        tx_id.setEnabled(false);
        btnAdd.setEnabled(false);
        updte.setEnabled(true);
        delete.setEnabled(true);


    }//GEN-LAST:event_TableMouseClicked

    private void updteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updteActionPerformed
        // TODO add your handling code here:

        //mengambil path untuk gambar
        String path = "";
        path = "src/imgdtbase/";

        try {
            // Update data pada tabel dan menjalankan statement
            String sql = "UPDATE tb_gambar SET jawaban_gambar=?, level_gambar=? WHERE id_gambar=?";
            java.sql.Connection conn = Koneksi.getKoneksi();
            PreparedStatement stmt = conn.prepareStatement(sql);

            // Jika gambar telah diganti, simpan gambar baru
            if (img != null) {
                stmt.setString(1, tx_jawaban.getText());

                if (Easy.isSelected()) {
                    stmt.setString(2, "Easy");
                } else if (Normal.isSelected()) {
                    stmt.setString(2, "Normal");
                } else {
                    stmt.setString(2, "Hard");
                }

                stmt.setString(3, tx_id.getText());

                try {
                    // Buat BufferedImage dari ikon pada label
                    Icon icon = lbl_photo.getIcon();
                    BufferedImage bi = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);

                    Graphics2D g2 = bi.createGraphics();
                    g2.drawImage(img, 0, 0, null);
                    g2.dispose();

                    // Simpan gambar ke file
                    ImageIO.write(bi, "jpg", new File(path + tx_id.getText() + ".jpg"));
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                // Jika gambar tidak diganti, biarkan gambar sesuai dengan masukan sebelumnya
                stmt.setString(1, tx_jawaban.getText());

                if (Easy.isSelected()) {
                    stmt.setString(2, "Easy");
                } else if (Normal.isSelected()) {
                    stmt.setString(2, "Normal");
                } else {
                    stmt.setString(2, "Hard");
                }

                stmt.setString(3, tx_id.getText());
            }

            stmt.executeUpdate();

            tx_id.setEnabled(false);
            tx_jawaban.setText("");
            Group.clearSelection();
            TampilData();

            JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_updteActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:

        // TODO add your handling code here:
        java.sql.Connection conn = Koneksi.getKoneksi();
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus data tersebut?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (confirm == 0) {
            try {
                java.sql.PreparedStatement stmt = conn.prepareStatement("delete from tb_gambar where id_gambar ='" + tx_id.getText() + "'");
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Pesan", JOptionPane.INFORMATION_MESSAGE);

                tx_id.setText("");
                lbl_photo.setIcon(null);
                tx_jawaban.setText("");
                Group.clearSelection();
                TampilData();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data gagal di hapus" + e.getMessage(), "Pesan", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: 
        int a;
        a = JOptionPane.showConfirmDialog(null, "Apakah yakin keluar aplikasi ini??",
                "Keluar", JOptionPane.YES_NO_OPTION);
        if (a == JOptionPane.YES_OPTION) {
            Login log = new Login();
            log.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        User us = new User();
////        us.isHaveId();
//        if (us.getId() == null) {
//            Login log = new Login();
//            log.setVisible(true);
//        } else {
////            java.awt.EventQueue.invokeLater(new Runnable() {
////                public void run() {
////                    new Admin().setVisible(true);
////                }
////            });
//        }
//    }
    public void TampilData() {
        tbl_gambar = null;
        tbl_gambar = new DefaultTableModel();
        tbl_gambar.addColumn("Id");
        tbl_gambar.addColumn("Gambar");
        tbl_gambar.addColumn("Jawaban");
        tbl_gambar.addColumn("Level");
        Table.setModel(tbl_gambar);
        java.sql.Connection conn = Koneksi.getKoneksi();

        String path = "";
        path = "src/imgdtbase/";

        try {
            java.sql.Statement stmt = conn.createStatement();
            String SQL = "select * from tb_gambar";
            java.sql.ResultSet res = stmt.executeQuery(SQL);

            while (res.next()) {

                // Create ImageIcon from byte[]
                ImageIcon imageIcon = new ImageIcon(path + res.getString("gambar"));
                // Set the ImageIcon to JLabel
                //lbl_photo.setIcon(imageIcon);

                tbl_gambar.addRow(new Object[]{
                    res.getString("id_gambar"),
                    imageIcon,
                    res.getString("jawaban_gambar"),
                    res.getString("level_gambar"),});
            }
            tbl_gambar.fireTableDataChanged();
            tx_id.setEnabled(false);
            btnAdd.setEnabled(true);
            updte.setEnabled(false);
            delete.setEnabled(false);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Easy;
    private javax.swing.ButtonGroup Group;
    private javax.swing.JRadioButton Hard;
    private javax.swing.JRadioButton Normal;
    private javax.swing.JPanel Panel;
    private javax.swing.JTable Table;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnUpload;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_photo;
    private javax.swing.JTextField tx_id;
    private javax.swing.JTextField tx_jawaban;
    private javax.swing.JButton updte;
    // End of variables declaration//GEN-END:variables
}
